{"version":3,"sources":["../../src/pages/setting/setting.module.ts","../../node_modules/@ionic-native/app-version/index.js","../../src/pages/setting/setting.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AACmB;AAgBvD,IAAa,aAAa;IAA1B;IAA4B,CAAC;IAAD,oBAAC;AAAD,CAAC;AAAhB,aAAa;IAdzB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAO;SACR;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAO,CAAC;SAClC;QACD,OAAO,EAAE;YACP,yDAAO;SACR;QACD,SAAS,EAAE;YACT,6EAAU;SACX;KACF,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;ACnB1B;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA,yDAAyD,QAAQ;AACjE;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD,iC;;;;;;;;;;;;;;;;;;;;;;ACzG0C;AAC0B;AACb;AACE;AAEzD;;;;;GAKG;AAMH,IAAa,OAAO;IAKlB,iBAAmB,OAAsB,EAAS,SAAoB,EAAS,UAAsB,EAAS,WAAwB;QAAtI,iBAQC;QARkB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAHtI,YAAO,GAAG,EAAE,CAAC;QACb,WAAM,GAAW,IAAI,CAAC;QAGpB,UAAU,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YACzC,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO;YAC5B,iBAAiB;QACnB,CAAC,CAAC,CAAC;QACH,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;IACH,CAAC;IAED,qBAAG,GAAH;QACE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,gCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;IAEH,cAAC;AAAD,CAAC;AAxBY,OAAO;IALnB,uFAAS,EAAE;IACX,wFAAS,CAAC;QACT,QAAQ,EAAE,cAAc;OACG;KAC5B,CAAC;YAMsI;AAmBvI;SAxBY,OAAO,mB","file":"8.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Setting } from './setting';\nimport { AppVersion } from '@ionic-native/app-version';\n\n@NgModule({\n  declarations: [\n    Setting,\n  ],\n  imports: [\n    IonicPageModule.forChild(Setting),\n  ],\n  exports: [\n    Setting\n  ],\n  providers: [\n    AppVersion\n  ]\n})\nexport class SettingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.module.ts","var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name App Version\r\n * @description\r\n * Reads the version of your app from the target build settings.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-app-version`. For more info, please see the [Cordova App Version docs](https://github.com/whiteoctober/cordova-plugin-app-version).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { AppVersion } from '@ionic-native/app-version';\r\n *\r\n * constructor(private appVersion: AppVersion) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * this.appVersion.getAppName();\r\n * this.appVersion.getPackageName();\r\n * this.appVersion.getVersionCode();\r\n * this.appVersion.getVersionNumber();\r\n *\r\n * ```\r\n */\r\nexport var AppVersion = (function (_super) {\r\n    __extends(AppVersion, _super);\r\n    function AppVersion() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     * Returns the name of the app\r\n     * @returns {Promise<any>}\r\n     */\r\n    AppVersion.prototype.getAppName = function () { return; };\r\n    /**\r\n     * Returns the package name of the app\r\n     * @returns {Promise<any>}\r\n     */\r\n    AppVersion.prototype.getPackageName = function () { return; };\r\n    /**\r\n     * Returns the build identifier of the app\r\n     * @returns {Promise<any>}\r\n     */\r\n    AppVersion.prototype.getVersionCode = function () { return; };\r\n    /**\r\n     * Returns the version of the app\r\n     * @returns {Promise<any>}\r\n     */\r\n    AppVersion.prototype.getVersionNumber = function () { return; };\r\n    AppVersion.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    AppVersion.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], AppVersion.prototype, \"getAppName\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], AppVersion.prototype, \"getPackageName\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], AppVersion.prototype, \"getVersionCode\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], AppVersion.prototype, \"getVersionNumber\", null);\r\n    AppVersion = __decorate([\r\n        Plugin({\r\n            pluginName: 'AppVersion',\r\n            plugin: 'cordova-plugin-app-version',\r\n            pluginRef: 'cordova.getAppVersion',\r\n            repo: 'https://github.com/whiteoctober/cordova-plugin-app-version',\r\n            platforms: ['Android', 'iOS']\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], AppVersion);\r\n    return AppVersion;\r\n}(IonicNativePlugin));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/app-version/index.js\n// module id = 369\n// module chunks = 8","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AppVersion } from '@ionic-native/app-version';\nimport { UserService } from '../../service/user.service';\n\n/**\n * Generated class for the Setting page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-setting',\n  templateUrl: 'setting.html',\n})\nexport class Setting {\n\n  Version = '';\n  ishide:boolean = true;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public appVersion: AppVersion, public UserService: UserService) {\n    appVersion.getVersionNumber().then((version) => {\n      this.Version = 'V' + version\n      //alert(version);\n    });\n    if(this.UserService._user._id){\n      this.ishide = false;\n    }\n  }\n\n  out() {\n    this.UserService.clearStorage();\n    this.navCtrl.pop();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Setting');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.ts"],"sourceRoot":""}